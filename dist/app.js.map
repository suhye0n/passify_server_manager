{"version":3,"sources":["../src/app.ts"],"sourcesContent":["import 'reflect-metadata';\nimport express from 'express';\nimport compression from 'compression';\nimport cookieParser from 'cookie-parser';\nimport cors from 'cors';\nimport helmet from 'helmet';\nimport hpp from 'hpp';\nimport morgan from 'morgan';\nimport { NODE_ENV, PORT, LOG_FORMAT, ORIGIN, CREDENTIALS } from '@config';\nimport { DB } from '@database';\nimport { Routes } from '@interfaces/routes.interface';\nimport { ErrorMiddleware } from '@middlewares/error.middleware';\nimport { logger, stream } from '@utils/logger';\n\nexport class App {\n  public app: express.Application;\n  public environment: string;\n  public serverPort: string | number;\n\n  constructor(routes: Routes[]) {\n    this.app = express();\n    this.environment = NODE_ENV || 'development';\n    this.serverPort = PORT || 3000;\n\n    this.setupDatabaseConnection();\n    this.applyMiddlewares();\n    this.configureRoutes(routes);\n    this.handleErrors();\n  }\n\n  public start() {\n    this.app.listen(this.serverPort, () => {\n      logger.info('-----------------------------------');\n      logger.info(`App is running in ${this.environment} mode.`);\n      logger.info(`Server is listening on port ${this.serverPort}`);\n      logger.info('-----------------------------------');\n    });\n  }\n\n  public getAppInstance() {\n    return this.app;\n  }\n\n  private async setupDatabaseConnection() {\n    try {\n      await DB.sequelize.sync({ force: false });\n      logger.info('Database connection established successfully.');\n    } catch (error) {\n      logger.error('Failed to connect to the database.', error);\n    }\n  }\n\n  private applyMiddlewares() {\n    this.app.use(morgan(LOG_FORMAT, { stream }));\n    this.app.use(cors({ origin: ORIGIN, credentials: CREDENTIALS }));\n    this.app.use(hpp());\n    this.app.use(helmet());\n    this.app.use(compression());\n    this.app.use(express.json());\n    this.app.use(express.urlencoded({ extended: true }));\n    this.app.use(cookieParser());\n  }\n\n  private configureRoutes(routes: Routes[]) {\n    routes.forEach(route => {\n      this.app.use('/', route.router);\n    });\n  }\n\n  private handleErrors() {\n    this.app.use(ErrorMiddleware);\n  }\n}\n"],"names":["App","start","app","listen","serverPort","logger","info","environment","getAppInstance","setupDatabaseConnection","DB","sequelize","sync","force","error","applyMiddlewares","use","morgan","LOG_FORMAT","stream","cors","origin","ORIGIN","credentials","CREDENTIALS","hpp","helmet","compression","express","json","urlencoded","extended","cookieParser","configureRoutes","routes","forEach","route","router","handleErrors","ErrorMiddleware","constructor","NODE_ENV","PORT"],"mappings":";;;;+BAcaA;;;eAAAA;;;QAdN;gEACa;oEACI;qEACC;6DACR;+DACE;4DACH;+DACG;wBAC6C;0BAC7C;iCAEa;wBACD;;;;;;;;;;;;;;;;;;;AAExB,IAAA,AAAMA,MAAN,MAAMA;IAgBJC,QAAQ;QACb,IAAI,CAACC,GAAG,CAACC,MAAM,CAAC,IAAI,CAACC,UAAU,EAAE;YAC/BC,cAAM,CAACC,IAAI,CAAC;YACZD,cAAM,CAACC,IAAI,CAAC,CAAC,kBAAkB,EAAE,IAAI,CAACC,WAAW,CAAC,MAAM,CAAC;YACzDF,cAAM,CAACC,IAAI,CAAC,CAAC,4BAA4B,EAAE,IAAI,CAACF,UAAU,EAAE;YAC5DC,cAAM,CAACC,IAAI,CAAC;QACd;IACF;IAEOE,iBAAiB;QACtB,OAAO,IAAI,CAACN,GAAG;IACjB;IAEA,MAAcO,0BAA0B;QACtC,IAAI;YACF,MAAMC,YAAE,CAACC,SAAS,CAACC,IAAI,CAAC;gBAAEC,OAAO;YAAM;YACvCR,cAAM,CAACC,IAAI,CAAC;QACd,EAAE,OAAOQ,OAAO;YACdT,cAAM,CAACS,KAAK,CAAC,sCAAsCA;QACrD;IACF;IAEQC,mBAAmB;QACzB,IAAI,CAACb,GAAG,CAACc,GAAG,CAACC,IAAAA,eAAM,EAACC,kBAAU,EAAE;YAAEC,QAAAA,cAAM;QAAC;QACzC,IAAI,CAACjB,GAAG,CAACc,GAAG,CAACI,IAAAA,aAAI,EAAC;YAAEC,QAAQC,cAAM;YAAEC,aAAaC,mBAAW;QAAC;QAC7D,IAAI,CAACtB,GAAG,CAACc,GAAG,CAACS,IAAAA,YAAG;QAChB,IAAI,CAACvB,GAAG,CAACc,GAAG,CAACU,IAAAA,eAAM;QACnB,IAAI,CAACxB,GAAG,CAACc,GAAG,CAACW,IAAAA,oBAAW;QACxB,IAAI,CAACzB,GAAG,CAACc,GAAG,CAACY,gBAAO,CAACC,IAAI;QACzB,IAAI,CAAC3B,GAAG,CAACc,GAAG,CAACY,gBAAO,CAACE,UAAU,CAAC;YAAEC,UAAU;QAAK;QACjD,IAAI,CAAC7B,GAAG,CAACc,GAAG,CAACgB,IAAAA,qBAAY;IAC3B;IAEQC,gBAAgBC,MAAgB,EAAE;QACxCA,OAAOC,OAAO,CAACC,CAAAA;YACb,IAAI,CAAClC,GAAG,CAACc,GAAG,CAAC,KAAKoB,MAAMC,MAAM;QAChC;IACF;IAEQC,eAAe;QACrB,IAAI,CAACpC,GAAG,CAACc,GAAG,CAACuB,gCAAe;IAC9B;IApDAC,YAAYN,MAAgB,CAAE;QAJ9B,uBAAOhC,OAAP,KAAA;QACA,uBAAOK,eAAP,KAAA;QACA,uBAAOH,cAAP,KAAA;QAGE,IAAI,CAACF,GAAG,GAAG0B,IAAAA,gBAAO;QAClB,IAAI,CAACrB,WAAW,GAAGkC,gBAAQ,IAAI;QAC/B,IAAI,CAACrC,UAAU,GAAGsC,YAAI,IAAI;QAE1B,IAAI,CAACjC,uBAAuB;QAC5B,IAAI,CAACM,gBAAgB;QACrB,IAAI,CAACkB,eAAe,CAACC;QACrB,IAAI,CAACI,YAAY;IACnB;AA4CF"}