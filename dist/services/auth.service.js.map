{"version":3,"sources":["../../src/services/auth.service.ts"],"sourcesContent":["import { compare, hash } from 'bcrypt';\nimport { sign } from 'jsonwebtoken';\nimport { Service } from 'typedi';\nimport { SECRET_KEY } from '@config';\nimport { DB } from '@database';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { HttpException } from '@/exceptions/httpException';\nimport { DataStoredInToken, TokenData } from '@interfaces/auth.interface';\nimport { User } from '@interfaces/users.interface';\n\nconst generateToken = (user: User): TokenData => {\n  const payload: DataStoredInToken = { id: user.id };\n  const expiresIn = 60 * 60;\n\n  return {\n    expiresIn,\n    token: sign(payload, SECRET_KEY, { expiresIn }),\n  };\n};\n\nconst generateCookie = (tokenData: TokenData): string => {\n  return `Authorization=${tokenData.token}; HttpOnly; Max-Age=${tokenData.expiresIn};`;\n};\n\n@Service()\nexport class AuthService {\n  public async signup(userData: CreateUserDto): Promise<{ cookie: string; user: User }> {\n    const existingUser: User = await DB.Users.findOne({\n      where: { email: userData.email },\n    });\n    if (existingUser) throw new HttpException(409, `This email ${userData.email} already exists`);\n\n    const hashedPassword = await hash(userData.password, 10);\n\n    const newUser: User = await DB.Users.create({\n      ...userData,\n      password: hashedPassword,\n    });\n\n    const tokenData = generateToken(newUser);\n\n    newUser.token = tokenData.token;\n    await DB.Users.update({ token: tokenData.token }, { where: { id: newUser.id } });\n\n    const cookie = generateCookie(tokenData);\n\n    return { cookie, user: newUser };\n  }\n\n  public async login(userData: CreateUserDto): Promise<{ cookie: string; user: User }> {\n    const user: User = await DB.Users.findOne({\n      where: { email: userData.email },\n    });\n    if (!user) throw new HttpException(409, `This email ${userData.email} was not found`);\n\n    const isPasswordValid: boolean = await compare(userData.password, user.password);\n    if (!isPasswordValid) throw new HttpException(409, 'Password not matching');\n\n    const tokenData = generateToken(user);\n\n    user.token = tokenData.token;\n    await DB.Users.update({ token: tokenData.token }, { where: { id: user.id } });\n\n    const cookie = generateCookie(tokenData);\n\n    return { cookie, user };\n  }\n\n  public async logout(userData: User): Promise<User> {\n    const user: User = await DB.Users.findOne({\n      where: { email: userData.email, password: userData.password },\n    });\n    if (!user) throw new HttpException(409, \"User doesn't exist\");\n\n    return user;\n  }\n}\n"],"names":["AuthService","generateToken","user","payload","id","expiresIn","token","sign","SECRET_KEY","generateCookie","tokenData","signup","userData","existingUser","DB","Users","findOne","where","email","HttpException","hashedPassword","hash","password","newUser","create","update","cookie","login","isPasswordValid","compare","logout"],"mappings":";;;;+BAyBaA;;;eAAAA;;;wBAzBiB;8BACT;wBACG;wBACG;0BACR;+BAEW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAI9B,MAAMC,gBAAgB,CAACC;IACrB,MAAMC,UAA6B;QAAEC,IAAIF,KAAKE,EAAE;IAAC;IACjD,MAAMC,YAAY,KAAK;IAEvB,OAAO;QACLA;QACAC,OAAOC,IAAAA,kBAAI,EAACJ,SAASK,kBAAU,EAAE;YAAEH;QAAU;IAC/C;AACF;AAEA,MAAMI,iBAAiB,CAACC;IACtB,OAAO,CAAC,cAAc,EAAEA,UAAUJ,KAAK,CAAC,oBAAoB,EAAEI,UAAUL,SAAS,CAAC,CAAC,CAAC;AACtF;AAGO,IAAA,AAAML,cAAN,MAAMA;IACX,MAAaW,OAAOC,QAAuB,EAA2C;QACpF,MAAMC,eAAqB,MAAMC,YAAE,CAACC,KAAK,CAACC,OAAO,CAAC;YAChDC,OAAO;gBAAEC,OAAON,SAASM,KAAK;YAAC;QACjC;QACA,IAAIL,cAAc,MAAM,IAAIM,4BAAa,CAAC,KAAK,CAAC,WAAW,EAAEP,SAASM,KAAK,CAAC,eAAe,CAAC;QAE5F,MAAME,iBAAiB,MAAMC,IAAAA,YAAI,EAACT,SAASU,QAAQ,EAAE;QAErD,MAAMC,UAAgB,MAAMT,YAAE,CAACC,KAAK,CAACS,MAAM,CAAC,wCACvCZ;YACHU,UAAUF;;QAGZ,MAAMV,YAAYT,cAAcsB;QAEhCA,QAAQjB,KAAK,GAAGI,UAAUJ,KAAK;QAC/B,MAAMQ,YAAE,CAACC,KAAK,CAACU,MAAM,CAAC;YAAEnB,OAAOI,UAAUJ,KAAK;QAAC,GAAG;YAAEW,OAAO;gBAAEb,IAAImB,QAAQnB,EAAE;YAAC;QAAE;QAE9E,MAAMsB,SAASjB,eAAeC;QAE9B,OAAO;YAAEgB;YAAQxB,MAAMqB;QAAQ;IACjC;IAEA,MAAaI,MAAMf,QAAuB,EAA2C;QACnF,MAAMV,OAAa,MAAMY,YAAE,CAACC,KAAK,CAACC,OAAO,CAAC;YACxCC,OAAO;gBAAEC,OAAON,SAASM,KAAK;YAAC;QACjC;QACA,IAAI,CAAChB,MAAM,MAAM,IAAIiB,4BAAa,CAAC,KAAK,CAAC,WAAW,EAAEP,SAASM,KAAK,CAAC,cAAc,CAAC;QAEpF,MAAMU,kBAA2B,MAAMC,IAAAA,eAAO,EAACjB,SAASU,QAAQ,EAAEpB,KAAKoB,QAAQ;QAC/E,IAAI,CAACM,iBAAiB,MAAM,IAAIT,4BAAa,CAAC,KAAK;QAEnD,MAAMT,YAAYT,cAAcC;QAEhCA,KAAKI,KAAK,GAAGI,UAAUJ,KAAK;QAC5B,MAAMQ,YAAE,CAACC,KAAK,CAACU,MAAM,CAAC;YAAEnB,OAAOI,UAAUJ,KAAK;QAAC,GAAG;YAAEW,OAAO;gBAAEb,IAAIF,KAAKE,EAAE;YAAC;QAAE;QAE3E,MAAMsB,SAASjB,eAAeC;QAE9B,OAAO;YAAEgB;YAAQxB;QAAK;IACxB;IAEA,MAAa4B,OAAOlB,QAAc,EAAiB;QACjD,MAAMV,OAAa,MAAMY,YAAE,CAACC,KAAK,CAACC,OAAO,CAAC;YACxCC,OAAO;gBAAEC,OAAON,SAASM,KAAK;gBAAEI,UAAUV,SAASU,QAAQ;YAAC;QAC9D;QACA,IAAI,CAACpB,MAAM,MAAM,IAAIiB,4BAAa,CAAC,KAAK;QAExC,OAAOjB;IACT;AACF"}