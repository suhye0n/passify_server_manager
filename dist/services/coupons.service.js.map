{"version":3,"sources":["../../src/services/coupons.service.ts"],"sourcesContent":["import { Service } from 'typedi';\nimport { DB } from '@database';\nimport { CreateCouponDto } from '@dtos/coupons.dto';\nimport { HttpException } from '@/exceptions/httpException';\nimport { Coupon } from '@interfaces/coupons.interface';\n\n@Service()\nexport class CouponService {\n  public async findAllCoupon(): Promise<Coupon[]> {\n    const coupons: Coupon[] = await DB.Coupons.findAll();\n    return coupons;\n  }\n\n  public async findCouponById(couponId: number): Promise<Coupon> {\n    const coupon: Coupon = await DB.Coupons.findByPk(couponId);\n    if (!coupon) throw new HttpException(409, \"Coupon doesn't exist\");\n\n    return coupon;\n  }\n\n  public async createCoupon(couponData: CreateCouponDto): Promise<Coupon> {\n    const existingCoupon: Coupon = await DB.Coupons.findOne({\n      where: { barcode: couponData.barcode },\n    });\n    if (existingCoupon) throw new HttpException(409, `This barcode ${couponData.barcode} already exists`);\n\n    const newCoupon: Coupon = await DB.Coupons.create(couponData);\n    return newCoupon;\n  }\n\n  public async updateCoupon(couponId: number, couponData: CreateCouponDto): Promise<Coupon> {\n    const couponToUpdate: Coupon = await DB.Coupons.findByPk(couponId);\n    if (!couponToUpdate) throw new HttpException(409, \"Coupon doesn't exist\");\n\n    await DB.Coupons.update(couponData, { where: { id: couponId } });\n\n    const updatedCoupon: Coupon = await DB.Coupons.findByPk(couponId);\n    return updatedCoupon;\n  }\n\n  public async deleteCoupon(couponId: number): Promise<Coupon> {\n    const couponToDelete: Coupon = await DB.Coupons.findByPk(couponId);\n    if (!couponToDelete) throw new HttpException(409, \"Coupon doesn't exist\");\n\n    await DB.Coupons.destroy({ where: { id: couponId } });\n\n    return couponToDelete;\n  }\n}\n"],"names":["CouponService","findAllCoupon","coupons","DB","Coupons","findAll","findCouponById","couponId","coupon","findByPk","HttpException","createCoupon","couponData","existingCoupon","findOne","where","barcode","newCoupon","create","updateCoupon","couponToUpdate","update","id","updatedCoupon","deleteCoupon","couponToDelete","destroy"],"mappings":";;;;+BAOaA;;;eAAAA;;;wBAPW;0BACL;+BAEW;;;;;;;AAIvB,IAAA,AAAMA,gBAAN,MAAMA;IACX,MAAaC,gBAAmC;QAC9C,MAAMC,UAAoB,MAAMC,YAAE,CAACC,OAAO,CAACC,OAAO;QAClD,OAAOH;IACT;IAEA,MAAaI,eAAeC,QAAgB,EAAmB;QAC7D,MAAMC,SAAiB,MAAML,YAAE,CAACC,OAAO,CAACK,QAAQ,CAACF;QACjD,IAAI,CAACC,QAAQ,MAAM,IAAIE,4BAAa,CAAC,KAAK;QAE1C,OAAOF;IACT;IAEA,MAAaG,aAAaC,UAA2B,EAAmB;QACtE,MAAMC,iBAAyB,MAAMV,YAAE,CAACC,OAAO,CAACU,OAAO,CAAC;YACtDC,OAAO;gBAAEC,SAASJ,WAAWI,OAAO;YAAC;QACvC;QACA,IAAIH,gBAAgB,MAAM,IAAIH,4BAAa,CAAC,KAAK,CAAC,aAAa,EAAEE,WAAWI,OAAO,CAAC,eAAe,CAAC;QAEpG,MAAMC,YAAoB,MAAMd,YAAE,CAACC,OAAO,CAACc,MAAM,CAACN;QAClD,OAAOK;IACT;IAEA,MAAaE,aAAaZ,QAAgB,EAAEK,UAA2B,EAAmB;QACxF,MAAMQ,iBAAyB,MAAMjB,YAAE,CAACC,OAAO,CAACK,QAAQ,CAACF;QACzD,IAAI,CAACa,gBAAgB,MAAM,IAAIV,4BAAa,CAAC,KAAK;QAElD,MAAMP,YAAE,CAACC,OAAO,CAACiB,MAAM,CAACT,YAAY;YAAEG,OAAO;gBAAEO,IAAIf;YAAS;QAAE;QAE9D,MAAMgB,gBAAwB,MAAMpB,YAAE,CAACC,OAAO,CAACK,QAAQ,CAACF;QACxD,OAAOgB;IACT;IAEA,MAAaC,aAAajB,QAAgB,EAAmB;QAC3D,MAAMkB,iBAAyB,MAAMtB,YAAE,CAACC,OAAO,CAACK,QAAQ,CAACF;QACzD,IAAI,CAACkB,gBAAgB,MAAM,IAAIf,4BAAa,CAAC,KAAK;QAElD,MAAMP,YAAE,CAACC,OAAO,CAACsB,OAAO,CAAC;YAAEX,OAAO;gBAAEO,IAAIf;YAAS;QAAE;QAEnD,OAAOkB;IACT;AACF"}